class Solution {
  public:
    // Function to find the shortest path from source to all other nodes
    vector<int> shortestPath(vector<vector<int>>& adj, int src) {
        // code here
        int n = adj.size();
        vector<int> ans(n,-1);
        // q  -> {node,distance}
        queue<pair<int,int>> q;
        ans[src] = 0;
        q.push({src,0});
        while(!q.empty()){
            int node = q.front().first;
            int dist = q.front().second;
            q.pop();
            for(auto it:adj[node]){
                if(ans[it]==-1){
                    ans[it] = dist + 1;
                    q.push({it,ans[it]});
                }
                else {
                    ans[it] = min(ans[it],dist+1);
                }
               
            }
        }
        return ans;
    }
};
