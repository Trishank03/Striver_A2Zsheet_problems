class Solution {
  public:
  
    void dfs(int node,vector<vector<int>> &adj,vector<int> &vis,stack<int> &st){
        vis[node] = 1;
        for(auto it: adj[node]){
            if(vis[it]==0){
                dfs(it,adj,vis,st);
            }
        }
        st.push(node);
    }
  
    // Function to return list containing vertices in Topological order.
    vector<int> topologicalSort(vector<vector<int>>& adj) {
        // Your code here
        stack<int> st;
        int n = adj.size();
        vector<int> vis(n,0);
        for(int i=0;i<n;i++){
            if(vis[i]==0){
                dfs(i,adj,vis,st);
            }
        }
        vector<int> ans;
        while(!st.empty()){
            ans.push_back(st.top());
            st.pop();
        }
        return ans;
    }
};
